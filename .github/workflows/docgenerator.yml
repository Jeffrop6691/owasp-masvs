name: Documents Build

on: [push, workflow_dispatch]

jobs:

##
## Use `pandocker-tag: TAG=latest-ubuntu-full` for langs that require the special fonts (Russian, Chinese, etc.)
##

  Generate-MASVS-Documents:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Set VERSION to env 
      run: echo "VERSION=$(curl -s https://api.github.com/repos/OWASP/owasp-masvs/tags | jq '.[0].name' | sed 's/\"//g')" >> $GITHUB_ENV

    - name: Set DEV VERSION if it's not a tag
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      run: echo "VERSION=${{env.VERSION}}-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Generate Markdown files from MASVS yaml
      run: python3 ./tools/generate_masvs_md.py

    - name: Generate PDF
      run: ./tools/docker/pandoc_makedocs.sh Document ${{ env.VERSION }}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS
        path: OWASP_MASVS*

  export:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1

    # tag name with the latest tag 
    # and the abbreviated hash of the most recent commit
    - name: Set VERSION to env 
      run: echo "VERSION=$(curl -s https://api.github.com/repos/OWASP/owasp-masvs/tags | jq '.[0].name' | sed 's/\"//g')" >> $GITHUB_ENV

    - name: Set DEV VERSION if it's not a tag
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      run: echo "VERSION=${{env.VERSION}}-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Install pyyaml
      run: pip3 install pyyaml

    - name: Generate CSV
      run: cd tools && python3 export.py --format csv --lang en > OWASP_MASVS.csv
    - name: Generate JSON
      run: cd tools && python3 export.py --format json --lang en > OWASP_MASVS.json
    - name: Generate XML
      run: cd tools && python3 export.py --format xml --lang en > OWASP_MASVS.xml
    - name: Generate MASVS YAML
      run: cd tools && python3 export.py --format yaml --lang en > OWASP_MASVS.yaml

    - name: Upload CSV
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS.csv
        path: tools/OWASP_MASVS.csv
    - name: Upload JSON
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS.json
        path: tools/OWASP_MASVS.json
    - name: Upload XML
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS.xml
        path: tools/OWASP_MASVS.xml
    - name: Upload YAML
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS.yaml
        path: tools/OWASP_MASVS.yaml

  release:
    runs-on: ubuntu-latest
    needs: [Generate-MASVS-Documents, export]
    if: startsWith(github.ref, 'refs/tags/') && (github.actor == 'cpholguera' || github.actor == 'sushi2k')
    steps:
      - uses: actions/download-artifact@v2
      - name: List Downloaded document (sampling of download-artifact)
        run: ls -l OWASP_MASVS*

      - name: print working directory
        run: pwd 
      - name: Listing of root directory
        run: ls -l 

      - name: Move all translations (pdf, and epub) to root
        run: mv OWASP_MASVS*/* .
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: false
          draft: true
          generate_release_notes: true
          discussion_category_name: Announcements
          files: |
            OWASP_MASVS.pdf
            OWASP_MASVS.epub
            OWASP_MASVS.csv/OWASP_MASVS.csv
            OWASP_MASVS.json/OWASP_MASVS.json
            OWASP_MASVS.xml/OWASP_MASVS.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
